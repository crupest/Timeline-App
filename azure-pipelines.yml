trigger:
- master

variables:
  ArtifactFeed: NodeModules

pool:
  vmImage: 'Ubuntu-16.04'
steps:
- task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
  inputs:
    keyfile: '**/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
    targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
    vstsFeed: '$(ArtifactFeed)'

- script: yarn install --non-interactive
  condition: ne(variables['CacheRestored'], 'true')
  displayName: Yarn Install

- task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
  inputs:
    keyfile: '**/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
    targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
    vstsFeed: '$(ArtifactFeed)'

- script: yarn run test --no-watch --browsers=ChromeHeadless --code-coverage
  displayName: Angular Test

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: 'junit/TESTS-*.xml'

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: 'coverage/cobertura-coverage.xml'
    reportDirectory: coverage
    failIfCoverageEmpty: true

- script: yarn build --prod
  displayName: App Build

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'timeline-app'
    targetPath: dist
